% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotMDS.R, R/utils.R
\name{plotMDS}
\alias{plotMDS}
\alias{paletteBig}
\title{Plot the multidimensional scaling of the GloScope represenation}
\usage{
plotMDS(dist_mat, metadata_df, sample_id, group_id, k = 10)

paletteBig()
}
\arguments{
\item{dist_mat}{The divergence matrix output of `gloscope()`}

\item{metadata_df}{A data frame contains each sample's metadata. Note this is NOT at the cell-level.}

\item{sample_id}{The column name or index in metadata_df that contains the sample ID}

\item{group_id}{The column name or index in metadata_df that contains the patient condition}

\item{k}{Number of MDS dimension to generate, default = 10}
}
\value{
A list containing the MDS embedding and plot of the distance matrix
\itemize{
  \item mds - A data.frame containing the MDS embedding, with the number of rows equal to the number of samples.
  \item plot - A ggplot object containing the plot object. `print` of the object will create a plot.
}
}
\description{
This function creates a multidimensional scaling plot for
 a set of samples using their GloScope divergence. Each sample's scatter will
be color-coded based on their phenotype. The function calls the `isoMDS` function
from the `MASS` package.

`paletteBig` is a small helper function to create a large color
  palette for plotting
}
\examples{
data(example_SCE_small)
sample_ids <- SingleCellExperiment::colData(example_SCE_small)$sample_id
# Run gloscope on first 10 PCA embeddings
# We use 'KNN' option for speed ('GMM' is slightly slower)
pca_embeddings <- SingleCellExperiment::reducedDim(example_SCE_small,"PCA")
pca_embeddings_subset <- pca_embeddings[,seq_len(10)] # select the first 10 PCs
dist_result <- gloscope(pca_embeddings_subset, sample_ids,
   dens="KNN",
   BPPARAM = BiocParallel::SerialParam(RNGseed=2))
# make a per-sample metadata
sample_metadata <- as.data.frame(unique(SingleCellExperiment::colData(example_SCE_small)))
mds_result <- plotMDS(dist_mat = dist_result, metadata_df = sample_metadata ,
"sample_id", "phenotype",k=2)
mds_result$plot
head(mds_result$mds)
}
